{"ast":null,"code":"// User.js\n\n// Function to fetch and display users\nasync function fetchUsers() {\n  try {\n    // Make a GET request to your Flask API endpoint\n    const response = await fetch('http://localhost:5000/user', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwdWJsaWNfaWQiOiIwZGI0ZGI3Yi0yNjU1LTQ0ZjctODRhNC02MDAxODlkMGRhMGYiLCJleHAiOjE2OTY1MDM1MDF9.N9y5evIjM2VweaQpdjAoLMsTJTNIL3wiG8LCtCFHbnI' // Replace with a valid access token\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status} - ${response.statusText}`);\n    }\n    const data = await response.json();\n\n    // Check if the response contains a 'users' key\n    if (data.users) {\n      const userList = data.users;\n\n      // Create an HTML element to display the users\n      const userListElement = document.getElementById('user-list');\n\n      // Clear any existing content\n      userListElement.innerHTML = '';\n\n      // Loop through the list of users and create list items\n      userList.forEach(user => {\n        const listItem = document.createElement('li');\n        listItem.textContent = `Name: ${user.name}, Email: ${user.email}`;\n        userListElement.appendChild(listItem);\n      });\n    } else {\n      console.error('No users found.');\n    }\n  } catch (error) {\n    console.error('Error:', error.message);\n  }\n}\n\n// Call the fetchUsers function when the page loads\nwindow.onload = fetchUsers;","map":{"version":3,"names":["fetchUsers","response","fetch","method","headers","ok","Error","status","statusText","data","json","users","userList","userListElement","document","getElementById","innerHTML","forEach","user","listItem","createElement","textContent","name","email","appendChild","console","error","message","window","onload"],"sources":["/home/farah/Desktop/meya2/client/src/components/UserList.js"],"sourcesContent":["// User.js\n\n// Function to fetch and display users\nasync function fetchUsers() {\n  try {\n    // Make a GET request to your Flask API endpoint\n    const response = await fetch('http://localhost:5000/user', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwdWJsaWNfaWQiOiIwZGI0ZGI3Yi0yNjU1LTQ0ZjctODRhNC02MDAxODlkMGRhMGYiLCJleHAiOjE2OTY1MDM1MDF9.N9y5evIjM2VweaQpdjAoLMsTJTNIL3wiG8LCtCFHbnI' // Replace with a valid access token\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status} - ${response.statusText}`);\n    }\n\n    const data = await response.json();\n\n    // Check if the response contains a 'users' key\n    if (data.users) {\n      const userList = data.users;\n\n      // Create an HTML element to display the users\n      const userListElement = document.getElementById('user-list');\n\n      // Clear any existing content\n      userListElement.innerHTML = '';\n\n      // Loop through the list of users and create list items\n      userList.forEach(user => {\n        const listItem = document.createElement('li');\n        listItem.textContent = `Name: ${user.name}, Email: ${user.email}`;\n        userListElement.appendChild(listItem);\n      });\n    } else {\n      console.error('No users found.');\n    }\n  } catch (error) {\n    console.error('Error:', error.message);\n  }\n}\n\n// Call the fetchUsers function when the page loads\nwindow.onload = fetchUsers;\n"],"mappings":"AAAA;;AAEA;AACA,eAAeA,UAAUA,CAAA,EAAG;EAC1B,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACzDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,gBAAgB,EAAE,+KAA+K,CAAC;MACpM;IACF,CAAC,CAAC;;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,UAASL,QAAQ,CAACM,MAAO,MAAKN,QAAQ,CAACO,UAAW,EAAC,CAAC;IACvE;IAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;;IAElC;IACA,IAAID,IAAI,CAACE,KAAK,EAAE;MACd,MAAMC,QAAQ,GAAGH,IAAI,CAACE,KAAK;;MAE3B;MACA,MAAME,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;;MAE5D;MACAF,eAAe,CAACG,SAAS,GAAG,EAAE;;MAE9B;MACAJ,QAAQ,CAACK,OAAO,CAACC,IAAI,IAAI;QACvB,MAAMC,QAAQ,GAAGL,QAAQ,CAACM,aAAa,CAAC,IAAI,CAAC;QAC7CD,QAAQ,CAACE,WAAW,GAAI,SAAQH,IAAI,CAACI,IAAK,YAAWJ,IAAI,CAACK,KAAM,EAAC;QACjEV,eAAe,CAACW,WAAW,CAACL,QAAQ,CAAC;MACvC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLM,OAAO,CAACC,KAAK,CAAC,iBAAiB,CAAC;IAClC;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACC,OAAO,CAAC;EACxC;AACF;;AAEA;AACAC,MAAM,CAACC,MAAM,GAAG7B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}